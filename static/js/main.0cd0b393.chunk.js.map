{"version":3,"sources":["shared/Header.js","context/blog-context.js","components/BlogForm.js","components/PageLoader.js","components/Home.js","components/Main.js","context/reducers.js","context/GlobalState.js","App.js","index.js"],"names":["Header","props","React","useState","show","setShow","Box","as","bg","Flex","align","justify","wrap","padding","color","maxWidth","mx","my","mr","Heading","size","letterSpacing","display","onClick","fill","width","viewBox","xmlns","d","alignItems","flexGrow","fontSize","to","activeClassName","ml","exact","mt","Link","href","isExternal","style","textDecoration","Button","leftIcon","FaGithub","border","createContext","blogs","createBlog","blog","deleteBlog","blogId","BlogForm","match","history","editMode","title","authorName","content","initialValues","setInitialValues","params","id","context","useContext","BlogContext","toast","useToast","validateTitle","value","error","length","validateAuthorName","useEffect","selectedBlog","filter","Number","in","transformProps","exitTransform","paddingTop","paddingBottom","height","justifyContent","flexDirection","p","shadow","borderWidth","rounded","base","md","Stack","isInline","spacing","enableReinitialize","onSubmit","values","actions","setTimeout","editBlog","resetForm","push","setSubmitting","position","description","status","duration","isClosable","handleChange","handleSubmit","isSubmitting","name","validate","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","Input","placeholder","onChange","FormErrorMessage","Textarea","variantColor","isLoading","type","float","PageLoader","left","right","bottom","top","zIndex","Spinner","thickness","Home","setBlogId","SimpleGrid","columns","map","key","margin","Badge","overflow","src","alt","loader","fontWeight","textTransform","px","clamp","lineHeight","Main","Fragment","path","component","render","getBlogIndex","state","findIndex","blogReducer","action","state_blogs","GlobalState","blogs_data","useReducer","blogState","dispatch","Provider","children","App","breakpoints","sm","lg","xl","newTheme","theme","ReactDOM","StrictMode","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.0cd0b393.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, Heading, Flex, Text, Button, Link } from '@chakra-ui/core'\nimport { NavLink } from 'react-router-dom'\nimport { FaGithub } from 'react-icons/fa'\nimport '../App.css'\n\nconst MenuItems = ({ children }) => (\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n    {children}\n  </Text>\n)\n\n// Note: This code could be better, so I'd recommend you to understand how I solved and you could write yours better :)\nconst Header = (props) => {\n  const [show, setShow] = React.useState(false)\n  const handleToggle = () => setShow(!show)\n\n  return (\n    <Box as=\"nav\" bg=\"teal.500\">\n      <Flex\n        as=\"nav\"\n        align=\"center\"\n        justify=\"space-between\"\n        wrap=\"wrap\"\n        padding=\"1.5rem\"\n        bg=\"teal.500\"\n        color=\"white\"\n        maxWidth=\"1200px\"\n        mx=\"auto\"\n        my=\"auto\"\n      >\n        <Flex align=\"center\" mr={5}>\n          <Heading as=\"h1\" size=\"lg\" letterSpacing={'-.1rem'} color=\"gray.600\">\n            Blog\n          </Heading>\n        </Flex>\n\n        <Box display={['block', 'none', 'none', 'none']} onClick={handleToggle}>\n          <svg\n            fill=\"white\"\n            width=\"12px\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <title>Menu</title>\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n          </svg>\n        </Box>\n\n        <Box\n          display={[show ? 'block' : 'none', 'flex', 'flex', 'flex']}\n          width={['full', 'auto', 'auto', 'auto']}\n          alignItems=\"center\"\n          flexGrow={1}\n        >\n          <Box>\n            <Heading fontSize=\"20px\">\n              <NavLink to=\"/new\" activeClassName=\"active\">\n                New\n              </NavLink>\n            </Heading>\n          </Box>\n          <Box ml={[0, 3, 3, 3]}>\n            <Heading fontSize=\"20px\">\n              <NavLink exact to=\"/\" activeClassName=\"active\">\n                List\n              </NavLink>\n            </Heading>\n          </Box>\n        </Box>\n\n        <Box display={['none', 'block', 'block', 'block']} mt={[4, 0, 0, 0]}>\n          <Link\n            href=\"https://github.com/MA-Ahmad/reactBlog\"\n            isExternal\n            style={{ textDecoration: 'none' }}\n          >\n            <Button leftIcon={FaGithub} bg=\"transparent\" border=\"1px\">\n              View Source\n            </Button>\n          </Link>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Header\n","import React from \"react\";\nimport blogs from \"../data/blogs\";\n\nexport default React.createContext({\n  blogs: blogs,\n  createBlog: blog => {},\n  deleteBlog: blogId => {}\n});\n","import React, { useState, useContext, useEffect } from 'react'\nimport {\n  Box,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Textarea,\n  Button,\n  Heading,\n  useToast,\n  FormErrorMessage,\n} from '@chakra-ui/core'\nimport BlogContext from '../context/blog-context'\nimport { Formik, Field } from 'formik'\nimport { FadeTransform } from 'react-animation-components'\n\nconst BlogForm = ({ match, history, editMode }) => {\n  const [initialValues, setInitialValues] = useState({\n    title: '',\n    authorName: '',\n    content: '',\n  })\n  const [id, setId] = useState(match.params.id)\n  const context = useContext(BlogContext)\n  const toast = useToast()\n\n  useEffect(() => {\n    if (editMode) {\n      const selectedBlog = context.blogs.filter(\n        (blog) => blog.id === Number(id)\n      )[0]\n      setInitialValues(selectedBlog)\n    } else {\n      setInitialValues({\n        title: '',\n        authorName: '',\n        content: '',\n      })\n    }\n  }, [editMode])\n\n  function validateTitle(value) {\n    let error\n    if (!value) {\n      error = 'Title is required'\n    } else if (value.length < 5) {\n      error = 'Must be 5 characters or more'\n    }\n    return error\n  }\n\n  function validateAuthorName(value) {\n    let error\n    if (!value) {\n      error = 'Name is required'\n    } else if (value.length < 5) {\n      error = 'Must be 5 characters or more'\n    }\n    return error\n  }\n\n  return (\n    <FadeTransform\n      in\n      transformProps={{\n        exitTransform: 'scale(0.5) translateX(-50%)',\n      }}\n    >\n      <Box\n        maxWidth=\"1200px\"\n        mx=\"auto\"\n        my=\"auto\"\n        paddingTop=\"20px\"\n        paddingBottom=\"20px\"\n        height={'100%'}\n      >\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n        >\n          <Heading as=\"h1\" color=\"teal.500\" size=\"lg\" p={5}>\n            {editMode ? 'Update' : 'Create'} a Blog\n          </Heading>\n\n          <Box\n            p={5}\n            shadow=\"md\"\n            borderWidth=\"1px\"\n            rounded=\"md\"\n            width={{ base: '60%', md: '40%' }}\n          >\n            <Stack isInline spacing={8} align=\"center\">\n              <Formik\n                enableReinitialize\n                initialValues={initialValues}\n                onSubmit={(values, actions) => {\n                  setTimeout(() => {\n                    if (editMode) {\n                      values['id'] = Number(id)\n                      context.editBlog(values)\n                      setInitialValues(values)\n                    } else {\n                      context.createBlog(values)\n                      actions.resetForm({})\n                    }\n                    history.push('/')\n\n                    actions.setSubmitting(false)\n                    const text = editMode\n                      ? 'Blog post updated successfully'\n                      : \"You've successfully created a blog post.\"\n                    toast({\n                      position: 'bottom',\n                      title: 'Notification',\n                      description: text,\n                      status: 'success',\n                      duration: 2000,\n                      isClosable: true,\n                    })\n                  }, 200)\n                }}\n              >\n                {({ values, handleChange, handleSubmit, isSubmitting }) => {\n                  return (\n                    <form onSubmit={handleSubmit} style={{ width: '100%' }}>\n                      <Box paddingBottom={3}>\n                        <Field\n                          name=\"title\"\n                          validate={validateTitle}\n                          width={'100%'}\n                        >\n                          {({ field, form }) => (\n                            <FormControl\n                              isInvalid={\n                                form.errors.title && form.touched.title\n                              }\n                            >\n                              <FormLabel htmlFor=\"title\">Title</FormLabel>\n                              <Input\n                                {...field}\n                                id=\"title\"\n                                placeholder=\"Title\"\n                                value={values.title}\n                                onChange={handleChange}\n                              />\n                              <FormErrorMessage>\n                                {form.errors.title}\n                              </FormErrorMessage>\n                            </FormControl>\n                          )}\n                        </Field>\n                      </Box>\n                      <Box paddingBottom={3}>\n                        <Field\n                          name=\"authorName\"\n                          validate={validateAuthorName}\n                          width={'100%'}\n                        >\n                          {({ field, form }) => (\n                            <FormControl\n                              isInvalid={\n                                form.errors.authorName &&\n                                form.touched.authorName\n                              }\n                            >\n                              <FormLabel htmlFor=\"authorName\">Name</FormLabel>\n                              <Input\n                                {...field}\n                                id=\"authorName\"\n                                placeholder=\"Author Name\"\n                                value={values.authorName}\n                                onChange={handleChange}\n                              />\n                              <FormErrorMessage>\n                                {form.errors.authorName}\n                              </FormErrorMessage>\n                            </FormControl>\n                          )}\n                        </Field>\n                      </Box>\n                      <Box paddingBottom={5}>\n                        <FormLabel htmlFor=\"content\">Content</FormLabel>\n                        <Textarea\n                          height={'20vh'}\n                          name=\"content\"\n                          value={values.content}\n                          onChange={handleChange}\n                        />\n                      </Box>\n                      <Button\n                        mt={4}\n                        variantColor=\"teal\"\n                        isLoading={isSubmitting}\n                        type=\"submit\"\n                        float=\"right\"\n                      >\n                        {editMode ? 'Update' : 'Create'}\n                      </Button>\n                    </form>\n                  )\n                }}\n              </Formik>\n            </Stack>\n          </Box>\n        </Flex>\n      </Box>\n    </FadeTransform>\n  )\n}\n\nexport default BlogForm\n","import React from \"react\";\nimport { Flex, Spinner } from \"@chakra-ui/core\";\nconst PageLoader = () => {\n  return (\n    <Flex\n      position=\"fixed\"\n      left={0}\n      right={0}\n      bottom={0}\n      top={0}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg=\"white\"\n      zIndex={999}\n    >\n      <Spinner thickness=\"4px\" color=\"gray.400\" />\n    </Flex>\n  );\n};\n\nexport default PageLoader;\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Box, Badge, SimpleGrid, useToast } from '@chakra-ui/core'\nimport Dotdotdot from 'react-dotdotdot'\nimport BlogContext from '../context/blog-context'\nimport { Link } from 'react-router-dom'\nimport PageLoader from './PageLoader'\nimport { Img } from 'react-image'\n\nconst Home = () => {\n  const context = useContext(BlogContext)\n  const [blogId, setBlogId] = useState('')\n  const toast = useToast()\n\n  useEffect(() => {\n    context.deleteBlog(blogId)\n  }, [blogId])\n\n  const handleDelete = (id) => {\n    toast({\n      position: 'bottom',\n      title: 'Notification',\n      description: 'Blog deleted successfully',\n      status: 'success',\n      duration: 2000,\n      isClosable: true,\n    })\n    setBlogId(id)\n  }\n  return (\n    <Box\n      maxWidth=\"1200px\"\n      mx=\"auto\"\n      my=\"auto\"\n      // paddingTop=\"20px\"\n      // paddingBottom=\"20px\"\n      p={5}\n    >\n      <SimpleGrid columns={[1, 2, 3]} spacing=\"15px\">\n        {context.blogs.map((blog) => {\n          return (\n            <Box position=\"relative\" key={blog.id}>\n              <Box\n                as=\"span\"\n                fontSize=\"sm\"\n                position=\"absolute\"\n                right=\"5px\"\n                margin=\"5px\"\n                zIndex=\"1\"\n              >\n                <Badge\n                  rounded=\"full\"\n                  p=\"2px 8px\"\n                  variantColor=\"red\"\n                  as=\"button\"\n                  onClick={() => handleDelete(blog.id)}\n                >\n                  Delete\n                </Badge>\n              </Box>\n              <Link to={`/edit/${blog.id}`}>\n                <Box\n                  // maxW=\"sm\"\n                  borderWidth=\"1px\"\n                  shadow=\"md\"\n                  rounded=\"lg\"\n                  overflow=\"hidden\"\n                  position=\"relative\"\n                >\n                  <Img\n                    src={'https://bit.ly/2Z4KKcF'}\n                    alt=\"Blog image\"\n                    loader={<PageLoader />}\n                  />\n                  <Box p=\"6\">\n                    <Box d=\"flex\" alignItems=\"baseline\">\n                      <Box\n                        fontWeight=\"semibold\"\n                        as=\"h2\"\n                        letterSpacing=\"wide\"\n                        textTransform=\"uppercase\"\n                        ml=\"2\"\n                      >\n                        {blog.title}\n                      </Box>\n                    </Box>\n                    <Box>\n                      <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n                        <Badge rounded=\"full\" px=\"2\" variantColor=\"teal\">\n                          {blog.authorName}\n                        </Badge>\n                      </Box>\n                    </Box>\n                    <Dotdotdot clamp={3}>\n                      <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"p\"\n                        lineHeight=\"tight\"\n                        color=\"gray.600\"\n                        fontSize=\"sm\"\n                      >\n                        {blog.content}\n                      </Box>\n                    </Dotdotdot>\n                  </Box>\n                </Box>\n              </Link>\n            </Box>\n          )\n        })}\n      </SimpleGrid>\n    </Box>\n  )\n}\n\nexport default Home\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"../shared/Header\";\nimport BlogForm from \"./BlogForm\";\nimport Home from \"./Home\";\n\nconst Main = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/new\"\n          render={props => {\n            return <BlogForm {...props} editMode={false} />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/edit/:id\"\n          render={props => {\n            return <BlogForm {...props} editMode={true} />;\n          }}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n","export const CREATE_BLOG = \"CREATE_BLOG\";\nexport const EDIT_BLOG = \"EDIT_BLOG\";\nexport const DELETE_BLOG = \"DELETE_BLOG\";\n\nconst createBlog = (blog, state) => {\n  const state_blogs = [...state.blogs];\n  state_blogs.push({ ...blog, id: state_blogs.length + 1 });\n  return { ...state, blogs: state_blogs };\n};\n\nconst editBlog = (blog, state) => {\n  const state_blogs = [...state.blogs];\n  const blogIndex = getBlogIndex(state, blog.id);\n  state_blogs[blogIndex] = blog;\n  return { ...state, blogs: state_blogs };\n};\n\nconst getBlogIndex = (state, blogId) => {\n  return state.blogs.findIndex(blog => blog.id === blogId);\n};\n\nconst deleteBlog = (blogId, state) => {\n  const state_blogs = [...state.blogs];\n  return { ...state, blogs: state_blogs.filter(blog => blog.id !== blogId) };\n};\n\nexport const blogReducer = (state, action) => {\n  switch (action.type) {\n    case CREATE_BLOG:\n      return createBlog(action.blog, state);\n    case EDIT_BLOG:\n      return editBlog(action.blog, state);\n    case DELETE_BLOG:\n      return deleteBlog(action.blogId, state);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport BlogContext from \"./blog-context\";\nimport { blogReducer, CREATE_BLOG, EDIT_BLOG, DELETE_BLOG } from \"./reducers\";\nimport blogs_data from \"../data/blogs\";\n\nconst GlobalState = props => {\n  const blogs = blogs_data;\n  const [blogState, dispatch] = useReducer(blogReducer, { blogs: blogs });\n\n  const createBlog = blog => {\n    dispatch({ type: CREATE_BLOG, blog: blog });\n  };\n\n  const editBlog = blog => {\n    dispatch({ type: EDIT_BLOG, blog: blog });\n  };\n\n  const deleteBlog = blogId => {\n    dispatch({ type: DELETE_BLOG, blogId: blogId });\n  };\n\n  return (\n    <BlogContext.Provider\n      value={{\n        blogs: blogState.blogs,\n        createBlog: createBlog,\n        editBlog: editBlog,\n        deleteBlog: deleteBlog\n      }}\n    >\n      {props.children}\n    </BlogContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport GlobalState from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <Router>\n        <Main />\n      </Router>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { theme, ThemeProvider, CSSReset } from '@chakra-ui/core'\n\nconst breakpoints = ['600px', '850px', '900px', '1440px']\nbreakpoints.sm = breakpoints[0]\nbreakpoints.md = breakpoints[1]\nbreakpoints.lg = breakpoints[2]\nbreakpoints.xl = breakpoints[3]\n\nconst newTheme = {\n  ...theme,\n  breakpoints,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={newTheme}>\n      <CSSReset />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n// function App() {\n//   return (\n//     <ThemeProvider theme={newTheme}>\n//       <CSSReset />\n//       <Header />\n//       <App />\n//     </ThemeProvider>\n//   );\n// }\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}